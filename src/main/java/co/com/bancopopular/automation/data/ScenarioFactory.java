package co.com.bancopopular.automation.data;

import co.com.bancopopular.automation.exceptions.UserNotFoundException;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import java.util.HashMap;
import java.util.Optional;
import org.aeonbits.owner.ConfigFactory;

public class ScenarioFactory {

  public JsonObject getData(String clientType) throws UserNotFoundException {

    Environment environment = ConfigFactory.create(Environment.class);
    String data = null;

    HashMap<String, String> userScenario = new HashMap<>();

    userScenario.put("cliente", environment.client());
    userScenario.put("asesor", environment.advisor());
    userScenario.put("no cliente", environment.noClient());
    userScenario.put("cliente sin celular", environment.clientNoPhoneMDM());
    userScenario.put("cliente con cartera castigada", environment.clientWriteOffPortFolio());
    userScenario.put("cliente con cuenta embargada", environment.clientSeizureAccount());
    userScenario.put("cliente con cuenta del Banco Popular embargada", environment.clientSeizureAccountBP());
    userScenario.put("cliente con mora mayor a 90 dias", environment.clientArrearsMoreThanNinetyDays());
    userScenario.put("asesor valido", environment.validVendor());
    userScenario.put("asesor no válido", environment.invalidVendor());
    userScenario.put("cliente no cumple condiciones misma cuota", environment.clientNotConditionSameFee());
    userScenario.put("asesor inactivo", environment.inactiveVendor());
    userScenario.put("admin de fábrica", environment.validFactoryAdmin());
    userScenario.put("cliente huellas - asesor oficina presencial", environment.clientBureauTrailOfficePres());
    userScenario.put("cliente huellas no extractor - asesor oficina presencial", environment.clientBureauTrailNoExtractorOfficePres());
    userScenario.put("cliente huellas no extractor - asesor oficina telefonico", environment.clientBureauTrailNoExtractorOfficeTel());
    userScenario.put("cliente huellas no extractor - asesor fidelizacion presencial", environment.clientBureauTrailNoExtractorLoyaltyPres());
    userScenario.put("cliente huellas no extractor - asesor fidelizacion telefonico", environment.clientBureauTrailNoExtractorLoyaltyTel());
    userScenario.put("cliente huellas - asesor vendor presencial", environment.clientBureauTrailVendorPres());
    userScenario.put("cliente huellas - asesor vendor telefónico", environment.clientBureauTrailVendorTel());
    userScenario.put("cliente huellas - asesor fidelización presencial", environment.clientBureauTrailLoyaltyPres());
    userScenario.put("cliente huellas - asesor expres presencial", environment.clientBureauTrailExpressPres());
    userScenario.put("cliente huellas - asesor FVE presencial", environment.clientBureauTrailFVEPres());
    userScenario.put("cliente huellas - asesor agendación presencial", environment.clientBureauTrailSchedulingPres());
    userScenario.put("cliente huellas - asesor oficina telefónico", environment.clientBureauTrailOfficeTel());
    userScenario.put("cliente huellas - asesor fidelización telefónico", environment.clientBureauTrailLoyaltyTel());
    userScenario.put("cliente huellas - asesor expres telefónico", environment.clientBureauTrailExpressTel());
    userScenario.put("cliente huellas - asesor FVE telefónico", environment.clientBureauTrailFVETel());
    userScenario.put("cliente huellas - asesor agendación telefónico", environment.clientBureauTrailSchedulingTel());
    userScenario.put("cliente con libranza activa, desembolsada y sin pago por nomina", environment.clientWithoutPaymentByPayroll());
    userScenario.put("cliente con libranza con desembolso negativo", environment.clientNegativeDisbursement());
    userScenario.put("cliente con libranza en estado derogatorio", environment.clientPunishedPayroll());
    userScenario.put("cliente con pagaduria no incluida en modelo digital", environment.clientPaymentNotIncluded());
    userScenario.put("cliente con libranzas en estado desembolsado, cancelado y activo", environment.clientCanceledAndDisbursedPayroll());
    userScenario.put("cliente pensionado hasta 69 años con bancaseguro de prima 12 meses", environment.clientPensioner69BankInsurance12());
    userScenario.put("cliente pensionado hasta 69 años con bancaseguro de prima 48 meses",environment.clientPensioner69BankInsurance48());
    userScenario.put("cliente pensionado mayor a 70 años con bancaseguro de prima 12 meses", environment.clientPensioner70BankInsurance12());
    userScenario.put("cliente pensionado mayor a 70 años con bancaseguro de prima 48 meses", environment.clientPensioner70BankInsurance48());
    userScenario.put("cliente sector del educativo 18-40 años con bancaseguro de prima 12 meses",environment.clientEducational40BankInsurance12());
    userScenario.put("cliente sector del educativo 56-65 años con bancaseguro de prima 48 meses",environment.clientEducational56BankInsurance48());
    userScenario.put("cliente misma cuota con validación Sim no exitosa", environment.clientSimNotValidSameFee());
    userScenario.put("cliente misma cuota con certihuella", environment.clientWithCertihuellaMC());
    userScenario.put("cliente toda cuota con validación Sim no exitosa", environment.clientSimNotValidAnyFee());
    userScenario.put("cliente toda cuota con certihuella", environment.clientWithCertihuellaTC());
    userScenario.put("cliente sin viabilidad interna", environment.clientInvalidODM());
    userScenario.put("cliente en Sygnus", environment.clientSygnus());
    userScenario.put("cliente sin autorización en Sygnus", environment.clientUnauthorizedSygnus());
    userScenario.put("cliente sin cupo en Sygnus", environment.clientWithoutOfferSygnus());
    userScenario.put("cliente de venta telefónica", environment.clientPhoneModel());
    userScenario.put("cliente toda cuota con desprendible que no corresponde al titular", environment.clientAnyFeeInvalidHolder());
    userScenario.put("cliente con capacidad de descuento menor a 300000", environment.clientLowDiscountCapacity());
    userScenario.put("cliente toda cuota con desprendible no sujeto de libranza", environment.clientNotSubjectToPayroll());
    userScenario.put("cliente toda cuota con desprendible vencido", environment.clientExpiredPayrollCheck());
    userScenario.put("cliente pensionado mayor o igual a 81 años en flujo CNC", environment.clientOver81CNC());
    userScenario.put("cliente pensionado con edad entre 70 y 81 años en flujo CNC", environment.client70to81CNC());
    userScenario.put("cliente pensionado con edad menor a 69 años en flujo CNC", environment.clientBelow69CNC());
    userScenario.put("cliente sin ventas en proceso", environment.clientWithoutPaymentsInProgress());
    userScenario.put("cliente con venta CNC en pendiente de captura", environment.clientWithCNCSalePendingCapture());
    userScenario.put("cliente con venta CNC en pendiente de aprobacion", environment.clientWithCNCSalePendingApproval());
    userScenario.put("cliente con venta CNC en pendiente de perfeccionamiento", environment.clientWithCNCSalePendingPerfecting());
    userScenario.put("cliente con una pagaduria cancelada unicamente", environment.clientWithOnlyCancelledPayroll());
    userScenario.put("cliente con pagaduría activa", environment.clientWithActivePayroll());
    userScenario.put("cliente con pagaduría para desembolso", environment.clientWithPayrollToDisbursement());
    userScenario.put("cliente en Sygnus con error en la reserva de cupo -2", environment.clientFailSygnusMinus2());
    userScenario.put("cliente en Sygnus con error en la reserva de cupo -9", environment.clientFailSygnusMinus9());
    userScenario.put("cliente nuevo conocido", environment.clientFailCrm());
    userScenario.put("cliente toda cuota que no cumple con la estructura en el simulador", environment.clientWithoutDisburmentAmt());
    userScenario.put("cliente que no cumple con la politica de crecimiento", environment.clientNoGrowthPolicy());
    userScenario.put("cliente con única cuenta nueva", environment.clientWithOnlyNewAccount());
    userScenario.put("cliente que no tiene pagadurias en estado activo", environment.clientWithoutLoansActive());
    userScenario.put("cliente que nunca ha tenido pagaduría", environment.clientWithoutLoans());
    userScenario.put("cliente reportado en listas ODM", environment.clientReportedODM());
    userScenario.put("cliente que al ser consultado se genera una falla técnica",environment.technicalFailureODM());
    userScenario.put("cliente con libranza en estado no activa, castigada", environment.clientWithPunishedPayroll());
    userScenario.put("cliente con cuenta no habil para libranza", environment.clientWithDisabledAccount());
    userScenario.put("cliente sin metodo de autenticacion", environment.clientWithOutAuthenticationMethodMDM());
    userScenario.put("cliente con condicion anormal", environment.clientWithAbnormalCondition());
    userScenario.put("consultar la última venta realizada", environment.client());
    userScenario.put("cliente cumple con la validación CRM y SIM exitosa y tiene una única cuenta para desembolso", environment.clientWhitValidationCrmAndSimSucces());
    userScenario.put("cliente que tiene una fecha inferior a 90 dias en CRM y el número de teléfono tiene validación SIM exitosa", environment.clientWithSuccessfulSimValidationAndPermanenceDateLessThan90Days());
    userScenario.put("cliente con cuenta Flexcube nativa",environment.clientWithFlexcubeAccount500());
    userScenario.put("cliente únicamente con cuentas Flexcube migradas",environment.clientOnlyWithFlexcubeAccountsMigrated());
    userScenario.put("cliente NC que presenta reporte por malos hábitos de pago", environment.clientWhitReportByBadBehavior());
    userScenario.put("cliente toda cuota con desprendible menor a 300000", environment.clientMinimumGrowthAmount());
    userScenario.put("cliente con ofi en 0", environment.clientOfi0());
    userScenario.put("cliente con error en preselecta",environment.clientPreselectNotResponse());
    userScenario.put("cliente que tiene 68 años y pertenece al sector educativo", environment.client68Years());
    userScenario.put("cliente no viable para tramitar por este canal", environment.clientNotViableToProcessThroughThisChannel());
    userScenario.put("cliente con desprendible no legible", environment.clientWithUnreadableDocument());
    userScenario.put("cliente con valor recibido en descuento 3 igual o mayor a la cuota actual",environment.clientWithDiscoutValueGreaterEqualsCurrentFee());
    userScenario.put("cliente sin oferta de bancaseguros",environment.clientWithoutBankininsurance());
    userScenario.put("cliente NO apto para recalculo ordinaria y SIN disponible BRMS",environment.clientNoRecalculationOrdinaryAndWithoutBRMS());
    userScenario.put("cliente Sygnus con venta negada",environment.clientSygnusWithFailedRenewal());
    userScenario.put("cliente con codigo invalido en desprendible colpensiones",environment.clientWithInvalidCodeInColpensionesDoc());
    userScenario.put("cliente con respuesta valor negativo en la validación por Sygnus",environment.clientWithNegativeValueInSygnus());
    userScenario.put("cliente no apto para recalculo ordinaria y sin disponible BRMS en Sygnus",environment.clientNoRecalculationOrdinaryAndWithoutBRMSInSygnus());
    userScenario.put("cliente NO apto para recalculo ordinaria pero con disponible BRMS",environment.clientNoRecalculationOrdinaryButWithBRMS());
    userScenario.put("cliente con un desprendible de nomina invalido",environment.clientWithInvalidRemovableDoc());
    userScenario.put("cliente misma cuota",environment.clientSameQuota());
    userScenario.put("cliente que tiene una venta de pagaduria Casur", environment.clientWithSaleCasur());
    userScenario.put("asesor que terminó su venta en la aplicación con la reserva de la libranza en Sygnus no es exitosa", environment.unsuccessfulReserveInRenewal());
    userScenario.put("cliente con eliminacion en respuesta de TAP",environment.clientWithResponseRemoveOnTap());
    userScenario.put("cliente con reporte de hábito de pago",environment.clientWithpaymentHabitReport());
    userScenario.put("cliente que solicita una venta por ampliación enviando documentos incorrectos a Decrim", environment.clientWithValidationDecrimFailed());
    userScenario.put("cliente toda cuota MDM",environment.getDataMDM());
    userScenario.put("cliente con Mora Histórica 30 interna",environment.clientWithInternalHistoricalMora30());
    userScenario.put("cliente con Mora Histórica 60 interna",environment.clientWithInternalHistoricalMora60());
    userScenario.put("cliente con Mora Histórica 90 interna",environment.clientWithInternalHistoricalMora90());
    userScenario.put("cliente con Mora Histórica 120 interna",environment.clientWithInternalHistoricalMora120());
    userScenario.put("cliente con Mora Actual Libranza interna", environment.clientWithInternalCurrentMoraPayrollcheck());
    userScenario.put("cliente con Mora Actual TDC interna",environment.clientWithIternalTDC());
    userScenario.put("cliente con Mora Actual Libre Inversión interna", environment.clientWithInternalFreeInvestment());
    userScenario.put("cliente con Mora Actual Cupo Múltiple interna", environment.clientWithInternalMutipleQuota());
    userScenario.put("cliente con Mora Actual Microcrédito interna", environment.clientWithInternalMicrocredit());
    userScenario.put("cliente con Mora Actual Comercial interna", environment.clientWithInternalCommercial());
    userScenario.put("cliente con Mora Actual Vivienda interna", environment.clientWithInternalLivingPlace());
    userScenario.put("cliente con Mora Actual Sobregiro interna", environment.clientWithInternalOverdraft());
    userScenario.put("cliente con Mora Actual Otro producto interna", environment.clientWithInternalOtherProduct());
    userScenario.put("cliente con Calificación Trimestre Anterior interna", environment.clientWithInternalQualificationPrevious());
    userScenario.put("cliente con Huellas de Consulta interna", environment.clientWithInternalFootprints());
    userScenario.put("cliente con Mora Actual Codeudor interna", environment.clientWithInternalCoSigner());
    userScenario.put("cliente con Estados Derogatorios interna",environment.clientWithInternalRepealing());
    userScenario.put("cliente con Mora Histórica 30 externa", environment.clientWithExternalHistoricalMora30());
    userScenario.put("cliente con Mora Histórica 60 externa", environment.clientWithExternalHistoricalMora60());
    userScenario.put("cliente con Mora Histórica 90 externa", environment.clientWithExternalHistoricalMora90());
    userScenario.put("cliente con Mora Histórica 120 externa",environment.clientWithExternalHistoricalMora120());
    userScenario.put("cliente con Mora Actual Libranza externa",environment.clientWithExternalCurrentMoraPayrollcheck());
    userScenario.put("cliente con Mora Actual TDC externa",environment.clientWithExternalTDC());
    userScenario.put("cliente con Mora Actual Libre Inversión externa",environment.clientWithExternalFreeInvestment());
    userScenario.put("cliente con Mora Actual Cupo Múltiple externa",environment.clientWithExternalMutipleQuota());
    userScenario.put("cliente con Mora Actual Comercial externa",environment.clientWithExternalCommercial());
    userScenario.put("cliente con Mora Actual Vivienda externa",environment.clientWithExternalLivingPlace());
    userScenario.put("cliente con Mora Actual Sobregiro externa", environment.clientWithExternalOverdraft());
    userScenario.put("cliente con Mora Actual Otro producto externa",environment.clientWithExternalOtherProduct());
    userScenario.put("cliente con Mora Actual Codeudor externa", environment.clientWithExternalCoSigner());
    userScenario.put("cliente con Mora Actual Instalamentos externa", environment.clientWithExternalInstalamentos());
    userScenario.put("cliente con Mora Actual Microcredito externa", environment.clientWithExternalMicroCredit());
    userScenario.put("cliente con Documento De Identidad No Vigente externa", environment.clientWithExternalInvalidViability());
    userScenario.put("cliente con varias subcausales por interna",environment.clientWithManyInternalCausal());
    userScenario.put("cliente con varias subcausales por externa",environment.clientWithManyExternalCausal());
    userScenario.put("cliente con Politica de credito interna",environment.clientWithInternalCreditPolliicy());
    userScenario.put("cliente con subcausales no esperadas externa",environment.clientWithUnexpectedExternalCauses());
    userScenario.put("cliente con Estados Derogatorios externa",environment.clientWithExternalRepealing());
    userScenario.put("cliente con varias subcausales y paz y salvo externa",environment.clientWithSubcausalListPeaceSafe());
    userScenario.put("cliente con varias subcausales y sin paz y salvo externa",environment.clientWithExternalSubcausalListWithoutPeaceSafe());
    userScenario.put("cliente con varias subcausales y sin paz y salvo interna",environment.clientWithInternalSubcausalListWithoutPeaceSafe());
    userScenario.put("CNC sector educativo con error 101 en certificado", environment.clientWithCNC101CodeCertification());
    userScenario.put("CNC sector educativo con error 102 en certificado", environment.clientWithCNC102CodeCertification());
    userScenario.put("CNC sector educativo con error 103 en certificado", environment.clientWithCNC103CodeCertification());
    userScenario.put("CNC sector educativo con error 104 en certificado", environment.clientWithCNC104CodeCertification());
    userScenario.put("CNC sector educativo con error 105 en certificado", environment.clientWithCNC105CodeCertification());
    userScenario.put("CNC sector educativo con error 106 en certificado", environment.clientWithCNC106CodeCertification());
    userScenario.put("CNC sector educativo con varios errores en certificado", environment.clientWithCNCAllCodeCertification());
    userScenario.put("CNC sector educativo con su certificado vencido", environment.clientWithExpiredCertificate());
    userScenario.put("CNC sector educativo con documentos exitoso", environment.clientWithSuccessfullDocuments());
    userScenario.put("CNC sector educativo menor a 70 años",environment.clientWithAgeLess70());
    userScenario.put("CNC sector educativo mayor a 70 años", environment.clientWithAgeMore70());
    userScenario.put("CNC sector educativo", environment.clientCNCEducational());
    userScenario.put("CNC de la secretaria de antioquia", environment.clientAntioquiaCNCEducational());
    userScenario.put("CNC con desprendible de otro titular", environment.clientCNClOtherHeadLine());
    userScenario.put("CNC con descuento activo", environment.clientCNCActiveDiscount());
    userScenario.put("CNC con desprendible ilegible", environment.clientCNCUnreadableFile());
    userScenario.put("CNC con desprendible vencido", environment.clientCNCExpiredFile());
    userScenario.put("cliente con Calificación Trimestre Anterior calificación B o C pensionado externa", environment.pensionerClientWithBCExternalQualificationPrevious());
    userScenario.put("cliente con Calificación Trimestre Anterior calificación B o C educativo externa", environment.educationalClientWithBCExternalQualificationPrevious());
    userScenario.put("cliente con Calificación Trimestre Anterior calificación B o C publico externa", environment.publicClientWithBCExternalQualificationPrevious());
    userScenario.put("cliente con Calificación Trimestre Anterior calificación D o E pensionado externa", environment.pensionerClientWithDEExternalQualificationPrevious());
    userScenario.put("cliente con Calificación Trimestre Anterior calificación D o E educativo externa", environment.educationalClientWithDEExternalQualificationPrevious());
    userScenario.put("cliente con Calificación Trimestre Anterior calificación D o E publico externa", environment.publicClientWithDEExternalQualificationPrevious());
    userScenario.put("cliente con Calificación Trimestre Anterior calificación B o C pensionado interna", environment.pensionerClientWithBCInternalQualificationPrevious());
    userScenario.put("cliente con Calificación Trimestre Anterior calificación B o C educativo interna", environment.educationalClientWithBCInternalQualificationPrevious());
    userScenario.put("cliente con Calificación Trimestre Anterior calificación B o C publico interna", environment.publicClientWithBCInternalQualificationPrevious());
    userScenario.put("cliente con Calificación Trimestre Anterior calificación D o E pensionado interna", environment.pensionerClientWithDEInternalQualificationPrevious());
    userScenario.put("cliente con Calificación Trimestre Anterior calificación D o E educativo interna", environment.educationalClientWithDEInternalQualificationPrevious());
    userScenario.put("cliente con Calificación Trimestre Anterior calificación D o E publico interna", environment.publicClientWithDEInternalQualificationPrevious());
    userScenario.put("cliente con codigo de error 2 en el primer llamado al simulador", environment.clientWithCode2ErrorFirstCallSimulation());
    userScenario.put("cliente con codigo de error 105 en el primer llamado al simulador", environment.clientWithCode105ErrorFirstCallSimulation());
    userScenario.put("cliente con codigo de error 111 en el primer llamado al simulador", environment.clientWithCode111ErrorFirstCallSimulation());
    userScenario.put("cliente con codigo de error 114 en el primer llamado al simulador", environment.clientWithCode114ErrorFirstCallSimulation());
    userScenario.put("cliente con codigo de error 117 en el primer llamado al simulador", environment.clientWithCode117ErrorFirstCallSimulation());
    userScenario.put("cliente con codigo de error 122 en el primer llamado al simulador", environment.clientWithCode122ErrorFirstCallSimulation());
    userScenario.put("cliente con codigo de error 125 en el primer llamado al simulador", environment.clientWithCode125ErrorFirstCallSimulation());
    userScenario.put("cliente con codigo de error 141 en el primer llamado al simulador", environment.clientWithCode141ErrorFirstCallSimulation());
    userScenario.put("cliente con codigo de error 145 en el primer llamado al simulador", environment.clientWithCode145ErrorFirstCallSimulation());
    userScenario.put("cliente con codigo de error 147 en el primer llamado al simulador", environment.clientWithCode147ErrorFirstCallSimulation());
    userScenario.put("cliente con edad 20", environment.factorSeguro00073());
    userScenario.put("cliente con edad 55", environment.factorSeguro0112());
    userScenario.put("cliente con edad 72", environment.factorSeguro00245());
    userScenario.put("cliente con edad 77", environment.factorSeguro0075());
    userScenario.put("cliente con edad 85", environment.factorSeguro0125());
    userScenario.put("CNC que no carga sus documentos en el tiempo limite", environment.clientWithTimeOutPayroll());
    userScenario.put("CNC con certificado exitoso previamente cargado",environment.clientWithCertificatePreLoaded());
    userScenario.put("CNC con desprendible exitoso previamente cargado",environment.clientWithPayrollPreLoaded());
    userScenario.put("cliente sin metodo de contacto y unico componentID",environment.clientWithoutContactInfoUniqueComponentID());
    userScenario.put("cliente sin metodo de contacto en primer y segundo registro de datos", environment.clientWithoutContactInfoTwoComponentID());
    userScenario.put("cliente con metodo de contacto unicamente en el segundo registro de datos",environment.clientWithContactInfoOnlyTwoComponentID());
    userScenario.put("cliente con Estado documento no valido externa",environment.clientWithExternalInvalidDocument());
    userScenario.put("cliente con Estados Derogatorios Productos del Pasivo externa",environment.clientWithExternalDerStaLiabilityProd());
    userScenario.put("cliente con lista de subcausales con desborde interna",environment.clientWithInternalSubcausaListOverflow());
    userScenario.put("cliente con Cuenta cancelada mal manejo interna",environment.clientWithInternalAccountCancel());
    userScenario.put("cliente con Cuenta cancelada mal manejo externa",environment.clientWithExternalAccountCancel());
    userScenario.put("cliente con Cuenta embargada interna",environment.clientWithInternalGarnishedAccount());
    userScenario.put("cliente con Cuenta embargada externa",environment.clientWithExternalGarnishedAccount());
    userScenario.put("cliente con lista de subcausales no esperadas interna",environment.clientWithCausalListNonExistent());
    userScenario.put("cliente con Mora Actual Rotativos externa",environment.clientWithExtenalRevolving());
    userScenario.put("cliente con Mora Actual Otros-Real externa",environment.clientWithExternalOtherReal());
    userScenario.put("cliente con Calificacion Modelo Comportamiento interna",environment.clientWithInternalRatingModelBehavior());
    userScenario.put("cliente con Calificacion Modelo de Originacion externa",environment.clientWithExternalOriModelQuafilication());
    userScenario.put("cliente registrado en BD de pagare unico con nombre de pagaduria incorrecto", environment.incorrectNamePromissory());
    userScenario.put("cliente con libranza no aprobada",environment.clientWithReleaseNotApproved());
    userScenario.put("cliente en BR pero no pasa BRMS",environment.clientBRMSRecipring());
    userScenario.put("cliente en BR con pagaduria no habilitada por el canal",environment.clientRepricingWithoutPaymentEnabled());
    userScenario.put("cliente en BR con obligación inactiva",environment.clientRepricingInactiveObligation());
    userScenario.put("cliente que no está en BR",environment.clientIsNotInRepricingTable());
    userScenario.put("cliente en BR con cuenta inactiva",environment.clientRepricingDisableAccount());
    userScenario.put("cliente en BR con obligación que no está sus obligaciones",environment.clientRepricingWithoutActiveObligation());
    userScenario.put("cliente en BR con cuenta de ahorros Flexcube en estado derogatorio",environment.clientRepricingFlexcubeSeizedAccount());
    userScenario.put("cliente con cuenta de ahorros Flexcube en estado derogatorio",environment.clientFlexcubeSeizedAccount());
    userScenario.put("cliente con cuenta de ahorros Flexcube en estado bloqueado",environment.clientFlexcubeBloquedAccount());
    userScenario.put("cliente con cuentas validas para desembolso y sin la estructura correcta",environment.clientWithUnstructuredAccount());
    userScenario.put("cliente con cuentas sin la estructura correcta",environment.clientWithUnstructuredAccountFailed());
    userScenario.put("cliente con cuenta de ahorros Flexcube en estado doble titularidad",environment.clientFlexcubeDualOwnnershipAccount());
    userScenario.put("cliente con cuentas validas para desembolso y tambien cuentas derrogadas, bloqueadas y con doble titularidad",environment.clientWithValidAccountAndSeizedBloquedAndDualOwnershipAccounts());
    userScenario.put("cliente con cuentas derrogadas, bloqueadas y con doble titularidad",environment.clientWithSeizedBloquedAndDualOwnershipAccounts());
    userScenario.put("cliente que no tiene cuentas Flexcube",environment.clientWithoutFlexcubeAccounts());
    userScenario.put("cliente que al consultar obtiene error técnico",environment.clientTechnicalErrorOwnership());
    userScenario.put("cliente con cuentas valida para desembolso con doble titularidad en valor null",environment.clientWithValidAccountWithDualOwnershipNull());
    userScenario.put("cliente en BR reportado en AMLRiskV2",environment.clientReportedAMLRiskv2());
    userScenario.put("cliente en BR que no existe en CRM o MDM",environment.clientNotInCRMMDM());
    userScenario.put("Cliente con una pagaduría no habilitada y habilitara para el canal",environment.clientWithPaymentEnabledAndDisabled());
    userScenario.put("cliente con libranza en estado valido",environment.clientWithValidPayment());
    userScenario.put("cliente CNC con extractor colpensiones",environment.clientWithColpensionesExtraction());
    userScenario.put("cliente CNC con extractor fopep",environment.clientWithFopepExtraction());
    userScenario.put("cliente CNC con extractor fiduprevisora",environment.clientWithFiduExtraction());
    userScenario.put("cliente CNC con extractor ferrocarries", environment.clientWithFerroExtraction());
    userScenario.put("cliente CNC con extractor positiva",environment.clientWithPositivaExtraction());
    userScenario.put("cliente con extractor colpensiones",environment.clientWithColpensionesExtractExt());
    userScenario.put("cliente con paz y salvo sector financiero", environment.clientFinancialSector());
    userScenario.put("cliente con paz y salvo por habito de pago actual banco popular", environment.clientCurrentPayment());
    userScenario.put("cliente con fecha 2024/10 en su desprendible ampliacion",environment.extractClientDate1());
    userScenario.put("cliente con fecha 2024/09 en su desprendible ampliacion",environment.extractClientDate2());
    userScenario.put("cliente con fecha 2024/08 en su desprendible ampliacion",environment.extractClientDate3());
    userScenario.put("cliente sin extractor con fecha 2024/09 en su desprendible ampliacion",environment.extractClientDate4());
    userScenario.put("cliente con un nivel de cargo provisional",environment.clientWithProvisionalLevel());
    userScenario.put("cliente con un nivel de cargo encargado",environment.clientWithChargeLevel());
    userScenario.put("cliente con un nivel de cargo periodo de prueba",environment.clientWithTestLevel());
    userScenario.put("cliente con un nivel de cargo vacio",environment.clientWithVoidLevel());
    userScenario.put("cliente con un nivel de cargo desconocido",environment.clientWithunknownLevel());
    userScenario.put("cliente extractor fopep",environment.clientWithFopepExtractExt());
    userScenario.put("cliente extractor fiduprevisora",environment.clientWithFiduprevisoraExtractExt());
    userScenario.put("cliente extractor ferrocarriles",environment.clientWithFerrocarrilesExtractExt());
    userScenario.put("cliente con extractor positiva",environment.clientWithPositivaExtractExt());


    data = userScenario.get(clientType);
    Optional<String> dataOptional = Optional.ofNullable(data);
    var dataVerified = dataOptional
        .orElseThrow(() -> new UserNotFoundException("Type of user does not exist in the system"));

    return JsonParser.parseString(dataVerified).getAsJsonObject();
  }
}